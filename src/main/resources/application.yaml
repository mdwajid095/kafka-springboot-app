server:
  port: 8080
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
# --------------------------------------------------------------
spring:
  profiles:
    active: admin
  application:
    name: kafka-${spring.profiles.active}
  kafka:
    bootstrap-servers: kafka.ict.emp.gcp.de.pri.o2.com:9092
    topic: wow-topic
    security:
      protocol: SSL
    ssl:
      trust-store-location: file:./src/main/resources/certs/kafka-external-truststore.p12
      trust-store-password: mystorepassword
      key-store-location: file:./src/main/resources/certs/kafka-external-keystore.p12
      key-store-password: mystorepassword
      key-password: mystorepassword
# ----------------------------CONSUMER--------------------------
    consumer:
      group-id: wow-cg
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      concurrency: 3
      ack-mode: batch
      retry:
        max-attempts: 3
        initial-interval: 1000
        multiplier: 2.0
        max-interval: 10000
# ----------------------------PRODUCER--------------------------
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: 1
      retries: 3
      enable-idempotence: true
      properties:
        linger.ms: 1
        batch.size: 16384
        buffer.memory: 33554432
# -----------------------------ADMIN----------------------------
    admin:
      topic-name: wow-topic
      partitions: 3
      replication-factor: 1
# ----------------------------STREAMS---------------------------
    streams:
      application-id: wow-stream-cg
      bootstrap-servers: kafka.ict.emp.gcp.de.pri.o2.com:9092
      input-topic: wow-topic-in
      output-topic: wow-topic-out
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      # Recommended additional configs for production
      state-dir: ./kafka-streams-state
      replication-factor: 1
      num-stream-threads: 3
      commit-interval-ms: 1000
      cache-max-bytes-buffering: 1024   # 10 MB
      processing-guarantee: exactly_once_v2 # or at_least_once
      topology.optimization: all
      # For error handling and monitoring
      default-deserialization-exception-handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
      default-production-exception-handler: org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
      # Optional: metrics reporter
      # metric.reporters: io.confluent.metrics.reporter.ConfluentMetricsReporter
